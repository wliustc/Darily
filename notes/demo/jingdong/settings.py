"""
Django settings for jingdong project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, 'crawlers'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kyxl9)si*_h*nkof)!#sft565a#6g%k3!ahy0%hz3loo!%pij6'

# SECURITY WARNING: don't run with DEBUG turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'django_celery_results',
    'django_celery_beat',

    # 京东dashboard页面
    'jd_dashboard.apps.JdDashboardConfig',
    # 京东监控
    'jd_monitor.apps.JdMonitorConfig',
    # 京东店铺
    'jd_shop.apps.JdShopConfig',
    # 京东产品
    'jd_product.apps.JdProductConfig',
    # 京东用户
    'jd_user.apps.JdUserConfig',
    # 京东批量工具
    'jd_tools.apps.JdToolsConfig',
    # 京东数据分析
    'jd_data.apps.JdDataConfig',
    # 京东促销、打折、营销
    'jd_market.apps.JdMarketConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jingdong.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'apps', 'dashboard', 'templates'),
        ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jingdong.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'jingdong',  # jingdong
        'USER': 'dazhuzai',  # dazhuzai
        'PASSWORD': 'dazhuzai66',  # dazhuzai66
        'HOST': '39.105.168.23',
        'PORT': '3306',
        'OPTIONS': {'init_command': 'SET default_storage_engine=INNODB;'}
    }
}

# auth user model
AUTH_USER_MODEL = 'jd_user.UserProfileModel'

# 自定义用户认证方式
AUTHENTICATION_BACKENDS = (
    'jd_user.views.CustomBackend',
)

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# 生产环境
STATIC_URL = '/static/'
# 静态路径
# STATIC_ROOT = os.path.join(BASE_DIR, 'statics')
# 生产媒体资源
MEDIA_URL = '/media/'
# 媒体资源路径
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 开发，测试环境
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'statics')]

# Logging setting TODO 日志细分化处理

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'main': {
            'datefmt': '%Y-%m-%d %H:%M:%S',
            'format': '%(asctime)s [%(module)s %(levelname)s] %(message)s',
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'main'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'main',
            'filename': os.path.join(BASE_DIR, 'logs', 'jingdong.log')
        }
    },
    'loggers': {
        'django': {
            'handlers': ['null'],
            'propagate': False,
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.server': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'jd_spider': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        }
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    # 限速设置
    'DEFAULT_THROTTLE_CLASSES': (
        # 未登陆用户
        'rest_framework.throttling.AnonRateThrottle',
        # 登陆用户
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        # 每分钟可以请求两次
        'anon': '300/minute',
        # 每分钟可以请求五次
        'user': '500/minute'
    },
    # 统一时间格式
    'DATETIME_FORMAT': '%Y-%m-%d %X'
}

# Celery application definition
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'
CELERY_RESULT_EXPIRES = 60 * 5 * 1
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_IGNORE_RESULT = False
CELERY_TASK_TRACK_STARTED = True

LOGIN_URL = '/user/account_login'

# 手机号匹配规则
REGEX_MOBILE = '^1[3578]\d{9}$|^147\d{8}$|^176\d{8}$'
# 手机短信平台API_KEY
ALI_SMS_KEY = 'LTAIZt3Ia8eYHLub'
ALI_SMS_SECRET = 'Rme9bx2slTAiPt5kbPqcDxB1l8rTsh'
ALI_SMS_SIGN_NAME = '大主宰科技'
ALI_SMS_TEMPLATE_CODE = 'SMS_151825049'
ALI_PUB_KEY_PATH = ''
ALI_PRI_KEY_PATH = ''

CODE_VERIFICATION_TIME = 5  # 验证码有效时间: 5分钟
